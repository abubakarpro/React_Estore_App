{"version":3,"sources":["components/ItemCard.jsx","common/logo.jsx","components/Popup.jsx","components/cartSubComponent.jsx","components/CartTable.jsx","components/header.jsx","components/navBar.jsx","App.js","serviceWorker.js","index.js"],"names":["ItemCard","props","onClick","counter","item","className","src","img","style","width","price","value","id","Logo","Popup","closePopup","children","CartSubComponent","itemsData","counterIncrement","counterDecrement","handleDelete","totalPrice","title","disabled","CartTable","grandTotal","console","log","map","d","key","Header","totalQuantity","togglePopup","showPopupStatus","getGrandTotal","marginLeft","NavBar","Fragment","href","sum","App","state","data","showPopup","counters","handleCounter","counterId","shouldAddCounter","newCounters","c","push","setState","handleCounterDecrement","filter","getQuantity","find","getTotalQuantity","total","getItems","items","i","itemData","length","this","ItemsStock","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d80b574d.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport '../style.css'\r\n\r\nconst ItemCard = (props) => {\r\n    const { onClick, counter, item } = props;\r\n\r\n    return (\r\n        <div className=\"item-card\">\r\n            <img className=\"item-img\" src={item.img} style={{ width: \"50%\" }} />\r\n            <p className=\"item-price\"><b>${item.price}</b></p>\r\n            <p className=\"item-quantity\">{counter ? counter.value : <span>&nbsp;</span>}</p>\r\n            <button onClick={() => onClick(item.id)}>Add to Cart</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nItemCard.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    counter: PropTypes.object,\r\n    item: PropTypes.object.isRequired\r\n\r\n}\r\n\r\nexport default ItemCard;\r\n","import React from 'react'\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div>\r\n            <h2 className=\"logo\">E-Store</h2>\r\n            {/* <img className=\"logoImg\" src={logoImg} /><label>sfdf</label> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst Popup = (props) => {\r\n\r\n    const { closePopup } = props;\r\n\r\n    return (\r\n        <div className=\"popup\">\r\n            <div className=\"popup_inner\">\r\n                <button className=\"Close-popup-btn\" onClick={closePopup}>X</button>\r\n                {props.children}\r\n\r\n\r\n\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nPopup.propTypes = {\r\n    closePopup: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default Popup;\r\n\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\n\r\nconst CartSubComponent = (props) => {\r\n\r\n    const { itemsData, counterIncrement, counterDecrement, handleDelete } = props;\r\n    const totalPrice = itemsData.value * itemsData.price;\r\n\r\n    return (\r\n        <tr>\r\n            <td>{itemsData.title}</td>\r\n            <td>\r\n                <button\r\n                    className=\"increment-btn\"\r\n                    onClick={() => counterIncrement(itemsData.id)}\r\n                >\r\n                    +\r\n                </button>\r\n                {itemsData.value}\r\n                <button\r\n                    className=\"decrement-btn\"\r\n                    onClick={() => counterDecrement(itemsData.id)}\r\n                    disabled={itemsData.value === 0 ? \"disabled\" : \"\"}\r\n                >\r\n                    -\r\n                </button>\r\n            </td>\r\n            <td>{itemsData.value}*{itemsData.price}</td>\r\n            <td>{totalPrice}</td>\r\n            <td><button\r\n                className=\"delete-btn\"\r\n                onClick={() => handleDelete(itemsData.id)}\r\n            >Delete\r\n            </button></td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nCartSubComponent.propTypes = {\r\n    itemsData: PropTypes.object.isRequired,\r\n    counterIncrement: PropTypes.func.isRequired,\r\n    counterDecrement: PropTypes.func.isRequired,\r\n    handleDelete: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nexport default CartSubComponent;","import React from 'react'\r\nimport PropTypes from \"prop-types\";\r\nimport CartSubComponent from './cartSubComponent'\r\n\r\n\r\nconst CartTable = (props) => {\r\n\r\n    const { counterDecrement, counterIncrement, handleDelete, grandTotal, itemsData } = props;\r\n    console.log(grandTotal);\r\n\r\n    return (\r\n        <table className=\"table\">\r\n            <thead>\r\n                <tr>\r\n                    <th>Item-Name</th>\r\n                    <th>Quantity</th>\r\n                    <th>Price</th>\r\n                    <th>Total</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {itemsData.map(d =>\r\n                    <CartSubComponent\r\n                        key={d.id}\r\n                        itemsData={d}\r\n                        counterDecrement={counterDecrement}\r\n                        counterIncrement={counterIncrement}\r\n                        handleDelete={handleDelete}\r\n                    />\r\n                )}\r\n                <tr><td><b>GrandTotal : {grandTotal}</b></td></tr>\r\n            </tbody>\r\n        </table>);\r\n}\r\n\r\nCartTable.propTypes = {\r\n    counterDecrement: PropTypes.func.isRequired,\r\n    counterIncrement: PropTypes.func.isRequired,\r\n    handleDelete: PropTypes.func.isRequired,\r\n    grandTotal: PropTypes.number.isRequired,\r\n    itemsData: PropTypes.array.isRequired\r\n\r\n}\r\n\r\nexport default CartTable;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport Logo from \"../common/logo\"\r\nimport Popup from '../components/Popup'\r\nimport CartTable from './CartTable';\r\n\r\n\r\n\r\nconst Header = (props) => {\r\n\r\n    const { itemsData, totalQuantity, togglePopup, showPopupStatus, handleDelete,\r\n        counterDecrement, counterIncrement, getGrandTotal } = props;\r\n\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <Logo />\r\n\r\n            <div className=\"cart-btn\">\r\n                <small className=\"totalQuantity\">{totalQuantity}</small>\r\n                <i className=\"fas fa-shopping-cart\" onClick={togglePopup} >\r\n                    <i className=\"fas fa-caret-down caret\"></i>\r\n                </i>\r\n            </div>\r\n\r\n            {showPopupStatus ?\r\n                <Popup closePopup={togglePopup}>\r\n                    {itemsData ? (<CartTable\r\n                        itemsData={itemsData}\r\n                        grandTotal={getGrandTotal}\r\n                        counterDecrement={counterDecrement}\r\n                        counterIncrement={counterIncrement}\r\n                        handleDelete={handleDelete}\r\n                    />) : <p style={{ marginLeft: \"30px\" }}> Add Some Items </p>}\r\n                </Popup>\r\n                : null\r\n            }\r\n            <div className=\"clear\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nHeader.propTypes = {\r\n    itemsData: PropTypes.array.isRequired,\r\n    totalQuantity: PropTypes.number.isRequired,\r\n    togglePopup: PropTypes.func.isRequired,\r\n    showPopupStatus: PropTypes.bool.isRequired,\r\n    handleDelete: PropTypes.func.isRequired,\r\n    counterDecrement: PropTypes.func.isRequired,\r\n    counterIncrement: PropTypes.func.isRequired,\r\n    getGrandTotal: PropTypes.number.isRequired\r\n\r\n}\r\n\r\nexport default Header;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\n\r\n\r\n\r\nconst NavBar = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"navbar\">\r\n                <a href=\"#\" className=\"item-type\">ALL CATEGORIES</a>\r\n                <a href=\"#\" className=\"item-type\">CLOTHES</a>\r\n                <a href=\"#\" className=\"item-type\">CHAIRS</a>\r\n                <a href=\"#\" className=\"item-type\">LAMPES</a>\r\n                <a href=\"#\" className=\"item-type\">OTHER</a>\r\n\r\n            </div>\r\n            {props.sum}\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from 'react';\nimport ItemsStock from \"./services/itemsStock.json\";\nimport ItemCard from \"./components/ItemCard\";\nimport Header from \"./components/header\";\nimport NavBar from \"./components/navBar\";\n\n\nimport './style.css';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    data: [],\n    showPopup: false,\n    counters: [\n\n    ]\n\n  }\n\n  componentDidMount() {\n    this.setState({ data: ItemsStock })\n\n  }\n  handleCounter = (counterId) => {\n    var shouldAddCounter = true;\n    const newCounters = this.state.counters.map(c => {\n      if (c.id === counterId) {\n        c.value++;\n        shouldAddCounter = false;\n        return { ...c };\n      }\n      return c;\n    });\n    if (shouldAddCounter) {\n      newCounters.push({\n        id: counterId,\n        value: 1\n      })\n    }\n    this.setState({ counters: newCounters });\n\n  }\n\n  handleCounterDecrement = (counterId) => {\n\n    const newCounters = this.state.counters.map(c => {\n      if (c.id === counterId) {\n        c.value--;\n        return { ...c };\n      }\n      return c;\n    }\n    ).filter(c => c.value !== 0);\n\n\n\n    this.setState({ counters: newCounters });\n  }\n\n  handleDelete = counterId => {\n    const counters = this.state.counters.filter(c => c.id !== counterId);\n    this.setState({ counters });\n  };\n\n  getQuantity = (id) => {\n    const counter = this.state.counters.find(c => c.id === id);\n\n    return counter;\n\n  }\n  togglePopup = () => {\n\n    this.setState({ showPopup: !this.state.showPopup });\n  }\n\n  getTotalQuantity = () => {\n    var total = 0;\n    this.state.counters.map(c => {\n      total = total + c.value;\n\n    })\n    return total;\n  }\n\n  getItems = () => {\n    var items = []\n    for (let i = 0; i < this.state.counters.length; i++) {\n      const item = this.state.data.find(d => d.id === this.state.counters[i].id)\n      const itemData = { ...item, ...this.state.counters[i] };\n      items.push(itemData);\n\n    }\n    // const itemData = this.state.counters.map(c => {\n    //   const item = this.state.data.find(d => d.id === c.id);\n    //   return {\n    //     ...c,\n    //     ...item\n    //   }\n    // })\n\n    return items;\n  }\n\n  getGrandTotal = () => {\n    var grandTotal = 0;\n    this.state.data.map(d => {\n      const total = d.value * d.price;\n      grandTotal = grandTotal + total;\n    })\n\n    return grandTotal;\n  }\n\n\n\n  render() {\n    return (\n      <React.Fragment>\n        <Header\n          togglePopup={this.togglePopup}\n          showPopupStatus={this.state.showPopup}\n          totalQuantity={this.getTotalQuantity()}\n          itemsData={this.getItems()}\n          counterDecrement={this.handleCounterDecrement}\n          counterIncrement={this.handleCounter}\n          handleDelete={this.handleDelete}\n          getGrandTotal={this.getGrandTotal()}\n        />\n\n        <NavBar />\n\n        <div className=\"container\">\n\n          {this.state.data.map(item =>\n            <ItemCard\n              key={item.id}\n              item={item}\n              onClick={this.handleCounter}\n              counter={this.getQuantity(item.id)}\n\n            />\n\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}